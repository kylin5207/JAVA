<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.UserDao">

    <sql id="defaultUser">
        select * from user;
    </sql>

    <!--配置查询所有用户的操作-->
    <select id="findAll" resultType="user">
        <include refid="defaultUser"></include>
    </select>

    <!--配置保存用户-->
    <insert id="saveUser" parameterType="domain.User">
        <!--配置插入操作后，获取插入数据的id-->
        <selectKey keyProperty="id" keyColumn="id" resultType="Integer" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username, address, sex, birthday) values(#{username}, #{address}, #{sex}, #{birthday});
    </insert>

    <!--更新用户-->
    <update id="updateUser" parameterType="domain.User">
        update user set username = #{username}, address = #{address}, sex = #{sex}, birthday = #{birthday} where id = #{id};
    </update>

    <!--根据id删除用户-->
    <delete id="deleteUser" parameterType="Integer">
        delete from user where id = #{id};
    </delete>

    <select id="findById" parameterType="Integer" resultType="domain.User">
        select * from user where id = #{id};
    </select>

    <!--推荐使用preparedStatement处理的select * from user where username like #{name}-->
    <!--使用Statement处理的select * from user where username like '%${value}%'-->
    <select id="findByName" parameterType="String" resultType="domain.User">
        <!--select * from user where username like '%${value}%'-->
        select * from user where username like #{name}
    </select>

    <select id="findTotal" resultType="Integer">
        select count(*) from user;
    </select>

    <!--根据QueryVo的条件，查询用户-->
    <select id="findUserByVo" parameterType="domain.QueryVo" resultType="domain.User">
        select * from user where username like #{user.username}
    </select>

    <!--根据条件查询-->
<!--    <select id="findUserByCondition" resultType="domain.User" parameterType="domain.User">-->
<!--        select * from user where 1 = 1-->
<!--        <if test="username != null">-->
<!--            and username = #{username}-->
<!--        </if>-->
<!--        <if test="sex != null">-->
<!--            and sex = #{sex}-->
<!--        </if>-->
<!--    </select>-->
    <select id="findUserByCondition" resultType="domain.User" parameterType="domain.User">
        select * from user
        <where>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
        </where>
    </select>

    <!--根据QueryVo3对象的ids集合，实现查询用户列表-->
    <select id="findUserByIds" resultType="domain.User" parameterType="domain.QueryVo3">
        <!--select * from user where id in (44, 45, 46)-->
        select * from user
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>

        </where>

    </select>

</mapper>