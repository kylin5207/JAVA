<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--把对象的创建交给spring来管理-->
    <!--
        1. 创建bean的三种方式

        2. bean对象的作用范围
            bean标签指定scope属性，指定对象的作用范围
                singleton：单例的（默认值）
                prototype：多例的
                request:作用于web的请求范围
                session：作用于web应用的会话范围
        3. bean对象的生命周期

    -->
    <!--第一种创建方式，使用默认构造函数创建（无参数的构造函数，如果类中没有默认的构造函数则会创建失败）-->
    <bean id="accountService" class="service.impl.AccountServiceImpl" scope="singleton" init-method="init" destroy-method="destroy"></bean>
    <bean id="accountDao" class="dao.impl.AccountDaoImpl"></bean>

    <!--第二种创建方式，使用普通工厂中的方法来创建对象（使用某个类中的方法创建对象，并存入spring容器）-->
    <!--id属性：指定bean的id
        factory-bean：指定实利工厂bean的id
        factory-method：指定实例工厂中创建对象的方法-->
<!--    <bean id="instanceFactory" class="factory.InstanceFactory"></bean>-->
<!--    <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"></bean>-->

    <!--第三种创建方式，使用工厂第静态方法创建对象（使用某个类中第静态方法创建对象，并存入spring容器中）-->
    <!--id属性：指定bean的id
        class属性：指定静态工厂的权限定类名
        factory-method：指定生产对象的静态方法-->
<!--    <bean id="accountService" class="factory.StaticFactory" factory-method="getAccountService"></bean>-->

</beans>